repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.(svg|png|jpg|jpeg|gif)$
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
        exclude: tsconfig\.json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
        exclude: package-lock\.json|poetry\.lock
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: detect-private-key
        exclude: (test|mock).*\.(key|pem)$
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python hooks
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.12
        args: ['--line-length=100']

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length=100']

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: ['--fix']

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: ['--strict', '--ignore-missing-imports']

  # JavaScript/TypeScript hooks
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.[jt]sx?$
        types: [file]
        additional_dependencies:
          - eslint@8.56.0
          - eslint-config-prettier@9.1.0
          - eslint-plugin-react@7.33.2
          - eslint-plugin-react-hooks@4.6.0
          - '@typescript-eslint/eslint-plugin@6.18.1'
          - '@typescript-eslint/parser@6.18.1'

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [css, javascript, jsx, ts, tsx, json, yaml, markdown]
        exclude: CHANGELOG\.md

  # Security hooks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock\.json|poetry\.lock

  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.18.1
    hooks:
      - id: gitleaks

  # Docker hooks
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        entry: hadolint
        language: docker
        types: [dockerfile]

  # Terraform hooks
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.86.0
    hooks:
      - id: terraform_fmt
      - id: terraform_docs
      - id: terraform_validate
      - id: terraform_tflint
      - id: terraform_tfsec

  # Kubernetes hooks
  - repo: https://github.com/syntaqx/kube-score
    rev: v1.16.1
    hooks:
      - id: kube-score
        files: \.yaml$
        exclude: (node_modules|.github)

  # Markdown hooks
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # Shell script hooks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: ['--severity=warning']

  # Commit message hooks
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Custom hooks
  - repo: local
    hooks:
      - id: no-commit-to-branch
        name: Don't commit to main branch
        entry: bash -c 'if [[ $(git symbolic-ref HEAD) == "refs/heads/main" ]]; then echo "Direct commits to main branch are not allowed"; exit 1; fi'
        language: system
        pass_filenames: false
        always_run: true

      - id: poetry-check
        name: Poetry check
        entry: poetry check
        language: system
        pass_filenames: false
        files: pyproject\.toml$

      - id: requirements-txt-fixer
        name: Fix requirements.txt
        entry: requirements-txt-fixer
        language: python
        files: requirements.*\.txt$

      - id: unit-tests
        name: Run unit tests
        entry: bash -c 'npm run test:unit -- --passWithNoTests || poetry run pytest tests/unit/ -x --tb=short'
        language: system
        pass_filenames: false
        stages: [push]

# Configuration
default_language_version:
  python: python3.12
  node: 20.10.0

exclude: |
  (?x)^(
    .*\.egg-info/.*|
    \.git/.*|
    \.venv/.*|
    build/.*|
    dist/.*|
    node_modules/.*|
    \.next/.*|
    \.pytest_cache/.*|
    \.mypy_cache/.*|
    __pycache__/.*|
    .*\.pyc|
    .*\.pyo|
    .*\.orig|
    .*\.rej
  )$

fail_fast: false
minimum_pre_commit_version: '3.0.0'
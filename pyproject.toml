[tool.poetry]
name = "candlefish-ai"
version = "1.0.0"
description = "Candlefish AI - Central orchestration platform for AI-powered applications"
authors = ["Candlefish AI <team@candlefish.ai>"]
readme = "README.md"
packages = [
    { include = "clos" },
    { include = "agents" }
]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
asyncpg = "^0.29.0"
redis = "^5.0.1"
celery = "^5.3.4"
httpx = "^0.25.1"
boto3 = "^1.33.0"
anthropic = "^0.7.0"
openai = "^1.3.0"
tiktoken = "^0.5.1"
numpy = "^1.26.0"
pandas = "^2.1.3"
scikit-learn = "^1.3.2"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
email-validator = "^2.1.0"
python-dotenv = "^1.0.0"
tenacity = "^8.2.3"
aiofiles = "^23.2.1"
websockets = "^12.0"
pyyaml = "^6.0.1"
click = "^8.1.7"
rich = "^13.7.0"
psycopg2-binary = "^2.9.9"
newrelic = "^9.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
black = "^23.12.1"
ruff = "^0.1.9"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
ipython = "^8.18.0"
ipdb = "^0.13.13"
faker = "^20.1.0"
factory-boy = "^3.3.0"
httpx-mock = "^0.4.0"
locust = "^2.20.0"

[tool.poetry.group.test.dependencies]
pytest-bdd = "^6.1.1"
pytest-benchmark = "^4.0.0"
hypothesis = "^6.92.0"
mutmut = "^2.4.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["clos/tests", "agents/tests", "projects/*/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=clos",
    "--cov=agents",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["clos", "agents"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]